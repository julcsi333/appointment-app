import org.jetbrains.kotlin.gradle.tasks.KotlinCompile


plugins {
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.22'
	id 'org.openapi.generator' version '7.3.0'
}

group = 'hu.bme.jj'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

sourceSets {
	main {
		kotlin {
			srcDirs += 'src/main/kotlin-generated/src/main/java'
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.mockito.kotlin:mockito-kotlin:4.0.0")
	//implementation 'com.microsoft.sqlserver:mssql-jdbc'
	implementation 'com.okta.spring:okta-spring-boot-starter:3.0.5'
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.3.4'
	implementation 'com.mysql:mysql-connector-j'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '21'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = 'spring' // Choose the generator name based on your target language/framework
	inputSpec = file('src/main/resources/openapi/backend.yaml').toString()
	outputDir = file('src/main/kotlin-generated').toString()
	apiPackage = 'hu.bme.jj.appointmentapp.backend.api.generated' // Adjust the package name as needed
}